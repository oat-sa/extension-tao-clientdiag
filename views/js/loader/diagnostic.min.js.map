{"version":3,"names":["loaderScript","document","getElementById","configUrl","getAttribute","bundle","loadController","controllerOptions","controllerPath","params","JSON","parse","err","window","require","controller","startController","started","start","addEventListener","readyState","loadBundles","loaded","bundles","concat","filter","item","index","indexOf","forEach","length","define","fixedDecimals","value","decimals","shift","Math","pow","abs","round","_","_Mathfloor","floor","_Mathmax","max","_Mathmin","min","valueGetter","name","stats","list","fieldName","_Mathceil","ceil","_Mathsqrt","sqrt","_NumberMAX_VALUE","Number","MAX_VALUE","getValue","values","count","sum","reduce","push","average","sum2","diff","variance","sort","middle","median","results","key","getConfig","config","defaults","omit","_Mathmax2","_Mathmin2","getLabels","messages","level","Array","isArray","parseInt","_Mathmax3","getStatus","percentage","thresholds","opts","options","testPercentage","globalPercentage","minimumGlobalPercentage","status","quality","feedback","len","i","step","threshold","clone","$","__","async","context","helpers","Loader","Renderer","_Mathabs","loadItem","data","done","qtiJsonFile","url","urlTokens","split","extension","fullpath","s","contexts","paths","baseUrl","replace","loader","renderer","getAssetManager","setData","itemData","loadItemData","load","performance","now","setRenderer","$container","appendTo","append","render","postRender","remove","end","duration","_second","result","id","getLoadedClasses","_defaultTimeout","_defaultOccurrencesCount","_defaultSamples","_defaults","optimal","_thresholds","message","type","_messages","title","performancesMin","performancesMax","performancesAverage","_sampleBaseId","performancesTester","initConfig","labels","idx","_samples","map","isEmpty","samples","sample","timeout","nb","occurrences","tests","cb","partial","iterations","series","measures","getFeedback","summary","getSummary","range","_Mathfloor2","_Mathmax4","download","bandwidth","root_url","file","Date","timeoutId","setTimeout","request","XMLHttpRequest","open","setRequestHeader","onload","clearTimeout","bytes","size","seconds","speed","_mega","onerror","onreadystatechange","send","_kilo","unit","ideal","feedbackThresholds","fallbackThreshold","_downloadData","\"10KB\"","\"100KB\"","\"1MB\"","legend","bandwidthMin","bandwidthMax","bandwidthAverage","bandwidthTester","bind","resultsBySize","o","avgResult","bandwidthUnit","maxTestTakers","getStatusOptions","baseBandwidth","stable","resultBySize","label","toString","wide","urlHelper","_Mathround","generateStr","text","possible","charAt","random","upload","route","cache","str","ajax","xhr","startTime","evt","lengthComputable","passedTime","time","uploadAvg","uploadMax","uploadTester","then","totalSpeed","maxSpeed","val","avgSpeed","avg","getTesterUrl","win","action","navigator","screen","e","f","ua","userAgent","ActiveXObject","opera","chrome","createElement","Worker","applicationCache","history","pushState","documentElement","webkitRequestFullScreen","r","substring","w","width","h","height","defaultConfig","browserVersionAction","browserVersionController","browserVersionExtension","getPlatformInfo","noToken","loggerFactory","logger","browserslistUrl","_placeHolders","CURRENT_BROWSER","CURRENT_OS","browser","os","unknown","browserTester","checkBrowserSupport","platformInfo","currentDevice","isMobile","currentOS","toLowerCase","currentBrowser","currentVersion","browserVersion","fetchBrowserList","some","entry","device","versions","version","flatten","localeCompare","numeric","catch","error","osVersion","browserSupported","Object","assign","method","success","customMsgRenderer","customMsg","currentOs","hb","template","container","depth0","partials","helper","lookupProperty","parent","propertyName","prototype","hasOwnProperty","call","escapeExpression","hooks","helperMissing","nullContext","hash","loc","line","column","stack1","fn","program","inverse","compiler","main","noop","useData","component","store","requestData","dialogAlert","mainTpl","resultTpl","detailsTpl","feedbackTpl","qualityBarTpl","header","info","button","actionStore","actionSchool","actionDropId","storeAllRuns","configurableText","diagnostic","changeStatus","is","controls","$status","html","storeParams","getCustomMsg","addCustomFeedbackMsg","msg","hasFailed","isFunction","addResult","$main","$result","find","details","$indicator","$results","fadeIn","animate","left","outerWidth","cleanUp","empty","enable","$start","removeClass","disable","addClass","prepare","trigger","setState","finish","deleteIdentifier","run","information","scores","testers","customInput","getCustomInput","doRun","doCheck","testerConfig","testerId","processTester","testerFactory","tester","customMsgKey","mapValues","stringify","processFailure","enabled","total","diagTotalCheckResult","vars","location","href","m","has","diagnosticFactory","diagComponent","setTemplate","on","onDiagnosticDestroy","onDiagnosticInit","onDiagnosticRender","getInputValue","$control","getControl","trim","setInputValue","toggleControl","state","prop","runDiagnostics","isPlainObject","launch","requestSchoolName","componentConfig","school_name","school_number","manageSchoolProperties","fields","validate","toggleStart","allow","every","toggleFields","getElement","shouldStart","which","preventDefault","defer","click","storage","setItem","Promise","all","getItem","response","errorMsg","errorMessage","$component","requireSchoolName","validateSchoolName","requireSchoolId","onShowDetails","$btn","closest","$details","onHideDetails","init","c","d","a","getElementsByTagName","appendChild","styleSheet","cssText","createTextNode"],"sources":["/Users/martinnicholson/work/currentgen/tao-community-handlebars4/tao/views/build/config-wrap-start-default.js","../../loader/bootstrap.js","../tools/fixedDecimals.js","../tools/stats.js","../tools/getConfig.js","../tools/getLabels.js","../tools/getStatus.js","../tools/performances/tester.js","../tools/bandwidth/tester.js","../tools/upload/tester.js","../tools/getPlatformInfo.js","../tools/browser/tester.js","../tools/diagnostic/tpl/main!tpl","../tools/diagnostic/tpl/result!tpl","../tools/diagnostic/tpl/details!tpl","../tools/diagnostic/tpl/feedback!tpl","tpl!taoClientDiagnostic/tools/diagnostic/tpl/quality-bar","../../taoClientDiagnosticCss/diagnostics!css","../tools/diagnostic/diagnostic.js","onLayerEnd0.js","module-create.js","/Users/martinnicholson/work/currentgen/tao-community-handlebars4/tao/views/build/config-wrap-end-default.js"],"sourcesContent":["\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Bootstrap the app, start the entry controller\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\n(function(){\n    'use strict';\n\n\n\n    var loaderScript = document.getElementById('amd-loader');\n    var configUrl = loaderScript.getAttribute('data-config');\n    var bundle  = loaderScript.getAttribute('data-bundle');\n\n    var loadController = function loadController(){\n        var controllerOptions = {};\n        var controllerPath = loaderScript.getAttribute('data-controller');\n        var params = loaderScript.getAttribute('data-params');\n        try{\n            controllerOptions = JSON.parse(params);\n        } catch(err){\n            controllerOptions = {};\n        }\n        window.require([controllerPath], function(controller) {\n            var startController = function startController(){\n                if(!window.started){\n                    window.started = true;\n                    controller.start(controllerOptions);\n                }\n            };\n            document.addEventListener('readystatechange', startController, false);\n            if (document.readyState === 'complete') {\n                startController();\n            }\n        });\n    };\n\n    //always start to load the config\n    window.require([configUrl], function() {\n\n        //define the global loading mechanism\n        if(!window.loadBundles){\n            //keep tracl of loaded bundles, even if require does it,\n            //this prevent some unecessary cycles\n            window.loaded = {};\n\n            /**\n             * Loading entry point for inter bundle dependency,\n             * always take the bundles from the params and window.bundles\n             * @param {String[]} [bundles] - an optional list of bundle to load\n             */\n            window.loadBundles = function loadBundles(bundles){\n                bundles = bundles || [];\n                bundles = bundles.concat(window.bundles)\n                bundles = bundles.filter( function(item, index){\n                    return item && bundles.indexOf(item) === index && window.loaded[item] !== true;\n                });\n                require(bundles, function(){\n                    bundles.forEach( function( item ) {\n                        window.loaded[item] = true;\n                    });\n                    loadController();\n                });\n            }\n        }\n\n        if(bundle || (window.bundles && window.bundles.length)) {\n            window.loadBundles([bundle]);\n        } else {\n            loadController();\n        }\n    });\n})();\n\ndefine(\"loader/bootstrap\", function(){});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/fixedDecimals',[],function() {\n    'use strict';\n\n    /**\n     * Rounds a value to a fixed number of decimals\n     * @param {number} value - The value to round\n     * @param {number} decimals - The number of decimal\n     * @returns {number}\n     */\n    return function fixedDecimals(value, decimals) {\n        const shift = Math.pow(10, Math.abs(decimals || 1));\n        return Math.round(Number(value) * shift) / shift || 0;\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/stats',['lodash', 'taoClientDiagnostic/tools/fixedDecimals'], function(_, fixedDecimals) {\n    'use strict';\n\n    /**\n     * Gets a getter function that extracts a value from a record.\n     * @param {string|Function} name - the name to extract from the record, or a getter function\n     * @returns {Function}\n     * @private\n     */\n    function valueGetter(name) {\n        if ('function' === typeof name) {\n            return name;\n        }\n\n        return item => (item && item[name]) || 0;\n    }\n\n    /**\n     * Computes some stats on a list from a particular field\n     * @param {Array|object} list - The list to compute stats on\n     * @param {string|Function} fieldName - The name of the field to process, or a callback method returning the value\n     * @param {number} [decimals] - Optional number of fixed decimals for values\n     * @returns {object}\n     */\n    return function stats(list, fieldName, decimals) {\n        const getValue = valueGetter(fieldName);\n        const values = [];\n        let min = Number.MAX_VALUE;\n        let max = 0;\n        let count = 0;\n\n        // process first pass stats: compute sum, min and max values\n        const sum = _.reduce(\n            list,\n            (sum, item) => {\n                if ('undefined' !== typeof item) {\n                    const value = getValue(item);\n                    values.push(value);\n                    min = Math.min(min, value);\n                    max = Math.max(max, value);\n                    sum += value;\n                    count++;\n                    return sum;\n                }\n            },\n            0\n        );\n\n        // compute the average value\n        const average = sum / (count || 1);\n\n        // process second pass stats: compute variance\n        const sum2 = values.reduce((sum, value) => {\n            const diff = value - average;\n            sum += diff * diff;\n            return sum;\n        }, 0);\n\n        // compute standard variance\n        const variance = count > 1 ? Math.sqrt(sum2 / (count - 1)) : 0;\n\n        // compute the median value\n        values.sort();\n        const middle = count / 2;\n        const median = (values[Math.floor(middle)] + values[Math.ceil(middle)]) / 2;\n\n        const results = {\n            min,\n            max,\n            sum,\n            count,\n            average,\n            median,\n            variance\n        };\n\n        if (decimals) {\n            _.forEach(results, (value, key) => {\n                results[key] = fixedDecimals(value, decimals);\n            });\n        }\n\n        results.values = list;\n        return results;\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/getConfig',['lodash'], function(_) {\n    'use strict';\n\n    /**\n     * Gets a config set\n     * @param {object} [config]\n     * @param {object} [defaults]\n     * @returns {object}\n     */\n    return function getConfig(config, defaults) {\n        return _(config || {})\n            .omit(value => value === null || typeof value === 'undefined')\n            .defaults(defaults || {})\n            .value();\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/getLabels',[],function() {\n    'use strict';\n\n    /**\n     * Gets the list of messages related to a particular level.\n     * The level is provided as a numeric value, starting from 1.\n     * @param {Array|object} messages - The list of messages for all levels.\n     *                                  If only one object is provided is will be wrapped into an array\n     * @param {number|string} level - The level for which filter the messages.\n     *                                It should be comprised within the available indexes.\n     *                                Higher levels will be reduced to the higher available,\n     *                                lower levels will be increased to the lowest.\n     * @returns {object}\n     */\n    return function getLabels(messages, level) {\n        messages = messages || {};\n\n        if (!Array.isArray(messages)) {\n            messages = [messages];\n        }\n\n        // Compute the level value that targets which list of labels to use.\n        // It should be comprised within the available indexes.\n        // Higher levels will be reduced to the higher available, lower levels will be increased to the lowest.\n        level = Math.min(Math.max(parseInt(level, 10) || 0, 1), messages.length || 1) - 1;\n\n        return messages[level] || {};\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/getStatus',['lodash'], function(_) {\n    'use strict';\n\n    /**\n     * Gets the correct status message for a given percentage from a list of thresholds.\n     * @param {number|string} percentage - The actual percentage. Must be comprised between 0 and 100.\n     *                                     Other values will be adjusted to fit the interval.\n     * @param {Array|object} [thresholds] - A list of descriptors for each thresholds.\n     *                                      A threshold field must be provided for each.\n     * @param {object} [opts]\n     * @param {object} [minimumGlobalPercentage] - lowest value that will be used in the global score computation\n     * @returns {object} Returns the corresponding threshold, or an empty object if none match.\n     */\n    return function getStatus(percentage, thresholds, opts) {\n        const options = opts || {};\n        const testPercentage = Math.max(0, Math.min(100, Math.round(parseInt(percentage, 10) || 0)));\n        const globalPercentage = options.minimumGlobalPercentage\n            ? Math.max(testPercentage, options.minimumGlobalPercentage)\n            : testPercentage;\n\n        // need a structure compatible with the handlebars template\n        const status = {\n            // the percentage is between 0 and 100 and obviously must be a number\n            percentage: testPercentage,\n            globalPercentage: globalPercentage,\n            quality: {}\n        };\n\n        // grab a feedback related to the percentage in the thresholds list\n        if (thresholds) {\n            if (!Array.isArray(thresholds)) {\n                thresholds = [thresholds];\n            }\n\n            let feedback;\n            const len = thresholds.length;\n            for (let i = 0; i < len; i++) {\n                const step = thresholds[i];\n                if (step && (!step.threshold || status.percentage >= step.threshold)) {\n                    feedback = step;\n                } else {\n                    break;\n                }\n            }\n\n            if (feedback) {\n                status.feedback = _.clone(feedback);\n            }\n        }\n\n        return status;\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/performances/tester',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'async',\n    'context',\n    'helpers',\n    'taoClientDiagnostic/tools/stats',\n    'taoQtiItem/qtiItem/core/Loader',\n    'taoQtiItem/qtiCommonRenderer/renderers/Renderer',\n    'taoClientDiagnostic/tools/getConfig',\n    'taoClientDiagnostic/tools/getLabels',\n    'taoClientDiagnostic/tools/getStatus'\n], function($, _, __, async, context, helpers, stats, Loader, Renderer, getConfig, getLabels, getStatus) {\n    'use strict';\n\n    /**\n     * Duration of one second (in milliseconds)\n     * @type {number}\n     * @private\n     */\n    const _second = 1000;\n\n    /**\n     * Default timeout duration\n     * @type {number}\n     * @private\n     */\n    const _defaultTimeout = 30 * _second;\n\n    /**\n     * Default number of renderings by samples\n     * @type {number}\n     * @private\n     */\n    const _defaultOccurrencesCount = 10;\n\n    /**\n     * List of default samples\n     * @type {Array}\n     * @private\n     */\n    const _defaultSamples = [\n        'taoClientDiagnostic/tools/performances/data/sample1/',\n        'taoClientDiagnostic/tools/performances/data/sample2/',\n        'taoClientDiagnostic/tools/performances/data/sample3/'\n    ];\n\n    /**\n     * Default values for the performances tester\n     * @type {object}\n     * @private\n     */\n    const _defaults = {\n        id: 'performances',\n\n        // The threshold for optimal performances\n        optimal: 0.025,\n\n        // The threshold for minimal performances\n        threshold: 0.25\n    };\n\n    /**\n     * A list of thresholds for performances check\n     * @type {Array}\n     * @private\n     */\n    const _thresholds = [\n        {\n            threshold: 0,\n            message: __('Very slow performances'),\n            type: 'error'\n        },\n        {\n            threshold: 33,\n            message: __('Average performances'),\n            type: 'warning'\n        },\n        {\n            threshold: 66,\n            message: __('Good performances'),\n            type: 'success'\n        }\n    ];\n\n    /**\n     * List of translated texts per level.\n     * The level is provided through the config as a numeric value, starting from 1.\n     * @type {object}\n     * @private\n     */\n    const _messages = [\n        // level 1\n        {\n            title: __('Workstation performances'),\n            status: __('Checking the performances...'),\n            performancesMin: __('Minimum rendering time'),\n            performancesMax: __('Maximum rendering time'),\n            performancesAverage: __('Average rendering time')\n        }\n    ];\n\n    /**\n     * Base text used to build sample identifiers\n     * @type {string}\n     * @private\n     */\n    const _sampleBaseId = 'sample';\n\n    /**\n     * Loads a page inside a div and compute the time to load\n     * @param {object} data The descriptor of the page to load\n     * @param {Function} done A callback function called to provide the result\n     * @private\n     */\n    function loadItem(data, done) {\n        //item location config\n        const qtiJsonFile = `${data.url}qti.json`;\n        const urlTokens = data.url.split('/');\n        const extension = urlTokens[0];\n        const fullpath = require.s.contexts._.config.paths[extension];\n        const baseUrl = data.url.replace(extension, fullpath);\n        const loader = new Loader();\n        const renderer = new Renderer({\n            baseUrl: baseUrl // compatibility mode for legacy installations\n        });\n\n        // check needed by compatibility mode for legacy installations\n        if (renderer.getAssetManager) {\n            renderer.getAssetManager().setData('baseUrl', baseUrl);\n        }\n\n        require([`json!${qtiJsonFile}`], function(itemData) {\n            loader.loadItemData(itemData, function(item) {\n                renderer.load(function() {\n                    //start right before rendering\n                    const start = window.performance.now();\n\n                    //set renderer\n                    item.setRenderer(this);\n\n                    //render markup\n                    const $container = $('<div>').appendTo('body');\n                    $container.append(item.render());\n\n                    //execute javascript\n                    item.postRender();\n\n                    //remove item\n                    $container.remove();\n\n                    //done\n                    const end = window.performance.now();\n\n                    const duration = (end - start) / _second;\n\n                    const result = {\n                        id: data.id,\n                        url: data.url,\n                        duration: duration\n                    };\n\n                    done(null, result);\n                }, this.getLoadedClasses());\n            });\n        });\n    }\n\n    /**\n     * Performs a browser performances test by running a heavy page\n     *\n     * @param {object} config - Some optional configs\n     * @param {string} [config.id] - The identifier of the test\n     * @param {number} [config.optimal] - The threshold for optimal performances\n     * @param {number} [config.threshold] - The threshold for minimal performances\n     * @param {string} [config.level] - The intensity level of the test. It will aim which messages list to use.\n     * @returns {object}\n     */\n    return function performancesTester(config) {\n        const initConfig = getConfig(config, _defaults);\n        const labels = getLabels(_messages, initConfig.level);\n        let idx = 0;\n        const _samples = _.map((!_.isEmpty(initConfig.samples) && initConfig.samples) || _defaultSamples, sample => {\n            idx++;\n            return {\n                id: _sampleBaseId + idx,\n                url: sample,\n                timeout: initConfig.timeout * 1000 || _defaultTimeout,\n                nb: initConfig.occurrences || _defaultOccurrencesCount\n            };\n        });\n\n        // add one occurrence on the first sample to obfuscate the time needed to load the runner\n        _samples[0].nb++;\n\n        return {\n            /**\n             * Performs a performances test, then call a function to provide the result\n             * @param {Function} done\n             */\n            start(done) {\n                const tests = [];\n\n                _.forEach(_samples, data => {\n                    const cb = _.partial(loadItem, data);\n                    let iterations = data.nb || 1;\n                    while (iterations--) {\n                        tests.push(cb);\n                    }\n                });\n\n                async.series(tests, (err, measures) => {\n                    const decimals = 2;\n\n                    if (err && !measures.length) {\n                        //something went wrong\n                        throw err;\n                    }\n\n                    // remove the first result to obfuscate the time needed to load the runner\n                    measures.shift();\n\n                    const results = stats(measures, 'duration', decimals);\n                    const status = this.getFeedback(results.average);\n                    const summary = this.getSummary(results);\n\n                    done(status, summary, results);\n                });\n            },\n\n            /**\n             * Gets the labels loaded for the tester\n             * @returns {object}\n             */\n            get labels() {\n                return labels;\n            },\n\n            /**\n             * Builds the results summary\n             * @param {object} results\n             * @returns {object}\n             */\n            getSummary(results) {\n                return {\n                    performancesMin: { message: labels.performancesMin, value: `${results.min} s` },\n                    performancesMax: { message: labels.performancesMax, value: `${results.max} s` },\n                    performancesAverage: { message: labels.performancesAverage, value: `${results.average} s` }\n                };\n            },\n\n            /**\n             * Gets the feedback status for the provided result value\n             * @param {Number} result\n             * @returns {object}\n             */\n            getFeedback(result) {\n                const optimal = initConfig.optimal;\n                const range = Math.abs(optimal - initConfig.threshold);\n                const status = getStatus(((range + optimal - result) / range) * 100, _thresholds);\n\n                status.title = labels.title;\n                status.id = initConfig.id;\n                return status;\n            }\n        };\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/bandwidth/tester',[\n    'lodash',\n    'i18n',\n    'async',\n    'context',\n    'taoClientDiagnostic/tools/getConfig',\n    'taoClientDiagnostic/tools/getLabels',\n    'taoClientDiagnostic/tools/stats',\n    'taoClientDiagnostic/tools/fixedDecimals',\n    'taoClientDiagnostic/tools/getStatus'\n], function(_, __, async, context, getConfig, getLabels, stats, fixedDecimals, getStatus) {\n    'use strict';\n\n    /**\n     * A binary kilo bytes (KiB)\n     * @type {number}\n     * @private\n     */\n    const _kilo = 1024;\n\n    /**\n     * A binary mega bytes (MiB)\n     * @type {number}\n     * @private\n     */\n    const _mega = _kilo * _kilo;\n\n    /**\n     * Duration of one second (in milliseconds)\n     * @type {number}\n     * @private\n     */\n    const _second = 1000;\n\n    /**\n     * A list of thresholds for bandwidth check\n     * @type {Array}\n     * @private\n     */\n    const _thresholds = [\n        {\n            threshold: 0,\n            message: __('Low bandwidth'),\n            type: 'error'\n        },\n        {\n            threshold: 33,\n            message: __('Average bandwidth'),\n            type: 'warning'\n        },\n        {\n            threshold: 66,\n            message: __('Good bandwidth'),\n            type: 'success'\n        }\n    ];\n\n    /**\n     * Default values for the bandwidth tester\n     * @type {object}\n     * @private\n     */\n    const _defaults = {\n        id: 'bandwidth',\n\n        // The typical bandwidth needed for a test taker (Mbps)\n        unit: 0.16,\n\n        // The thresholds for optimal bandwidth\n        ideal: 45,\n\n        // Maximum number of test takers to display\n        max: 100,\n\n        // Lowest value that will be used in the global score computation\n        minimumGlobalPercentage: false,\n\n        // A list of thresholds for bandwidth check\n        feedbackThresholds: _thresholds,\n\n        fallbackThreshold: 0.2\n    };\n\n    /**\n     * List of descriptors defining the data sets to download.\n     * - file : path of the file containing the test data\n     * - size : the given size of the file\n     * - timeout : the timeout for the download\n     * - threshold : a bandwidth threshold above which the data set can be downloaded to evaluate a more accurate value\n     * - nb : number of download iterations\n     * @type {object}\n     * @private\n     */\n    const _downloadData = {\n        '10KB': {\n            id: '10KB',\n            file: 'data/bin10KB.data',\n            size: 10 * _kilo,\n            timeout: _second,\n            threshold: 0,\n            nb: 10\n        },\n        '100KB': {\n            id: '100KB',\n            file: 'data/bin100KB.data',\n            size: 100 * _kilo,\n            timeout: 2 * _second,\n            threshold: 0,\n            nb: 5\n        },\n        '1MB': {\n            id: '1MB',\n            file: 'data/bin1MB.data',\n            size: _mega,\n            timeout: 20 * _second,\n            threshold: 0,\n            nb: 3\n        }\n    };\n\n    /**\n     * List of translated texts per level.\n     * The level is provided through the config as a numeric value, starting from 1.\n     * @type {object[]}\n     * @private\n     */\n    const _messages = [\n        // level 1\n        {\n            title: __('Bandwidth'),\n            status: __('Checking the bandwidth...'),\n            legend: __('Number of simultaneous test takers the connection can handle'),\n            bandwidthMin: __('Minimum bandwidth'),\n            bandwidthMax: __('Maximum bandwidth'),\n            bandwidthAverage: __('Average bandwidth')\n        },\n        // level 2\n        {\n            title: __('Media intensive bandwidth'),\n            status: __('Checking the media intensive bandwidth...'),\n            legend: __('Number of simultaneous test takers the connection can handle with media intensive'),\n            bandwidthMin: __('Minimum intensive bandwidth'),\n            bandwidthMax: __('Maximum intensive bandwidth'),\n            bandwidthAverage: __('Average intensive bandwidth')\n        }\n    ];\n\n    /**\n     * Download a data set as described by the provided descriptor and compute the duration.\n     * @param {object} data The data set descriptor to use for download\n     * @param {Function} cb A callback function called at the end of the download.\n     * This callback is also called if a timeout breaks the download;\n     * @private\n     */\n    function download(data, cb) {\n        if (data.threshold && this.bandwidth < data.threshold) {\n            return cb('threshold');\n        }\n\n        const start = window.performance.now();\n        const url = `${context['root_url']}taoClientDiagnostic/views/js/tools/bandwidth/${data.file}?${Date.now()}`;\n        const timeoutId = window.setTimeout(cb, data.timeout, 'timeout');\n        const request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.setRequestHeader('Accept', 'application/octet-stream');\n\n        request.onload = () => {\n            const end = window.performance.now();\n            clearTimeout(timeoutId);\n\n            const duration = end - start;\n            const bytes = data.size;\n            const seconds = duration / _second;\n\n            // speed in Mbps\n            const speed = (bytes * 8) / seconds / _mega;\n\n            this.bandwidth = Math.max(this.bandwidth, speed);\n\n            return cb(null, {\n                id: data.id,\n                file: data.file,\n                size: data.size,\n                duration,\n                speed\n            });\n        };\n        request.onerror = err => {\n            clearTimeout(timeoutId);\n            cb(err);\n        };\n\n        request.onreadystatechange = () => {\n            if (request.readyState === 4 && request.status !== 200) {\n                clearTimeout(timeoutId);\n                cb(request.status);\n            }\n        };\n\n        request.send();\n    }\n\n    /**\n     * Performs a bandwidth test by downloading a bunch of data sets with different sizes\n     *\n     * @param {object} config - Some optional configs\n     * @param {string} [config.id] - The identifier of the test\n     * @param {number} [config.unit] - The typical bandwidth needed for a test taker (Mbps)\n     * @param {number} [config.ideal] - The thresholds for optimal bandwidth\n     * @param {number} [config.max] - Maximum number of test takers to display\n     * @param {string} [config.level] - The intensity level of the test. It will aim which messages list to use.\n     * @returns {object}\n     */\n    return function bandwidthTester(config) {\n        const initConfig = getConfig(config, _defaults);\n        const labels = getLabels(_messages, initConfig.level);\n\n        // override the feedback thresholds given by the config in case it is an empty array\n        if (_.isArray(initConfig.feedbackThresholds) && !initConfig.feedbackThresholds.length) {\n            initConfig.feedbackThresholds = _thresholds;\n        }\n\n        return {\n            /**\n             * Performs a bandwidth test, then call a function to provide the result\n             * @param {Function} done\n             */\n            start(done) {\n                const tests = [];\n\n                _.forEach(_downloadData, data => {\n                    const cb = download.bind(this, data);\n                    let iterations = data.nb || 1;\n                    while (iterations--) {\n                        tests.push(cb);\n                    }\n                });\n\n                this.bandwidth = 0;\n\n                async.series(tests, (err, measures) => {\n                    let duration = 0;\n                    let size = 0;\n                    const decimals = 2;\n                    const resultsBySize = {};\n\n                    function getValue(value) {\n                        let speed = 0;\n\n                        if (value) {\n                            duration += value.duration;\n                            size += value.size;\n\n                            speed = value.speed;\n                            value.speed = fixedDecimals(speed, decimals);\n                        }\n\n                        return speed;\n                    }\n\n                    if (err && !measures.length) {\n                        //something went wrong\n                        throw err;\n                    }\n                    const results = stats(measures, getValue, decimals);\n\n                    _.forEach(_downloadData, (data, key) => {\n                        resultsBySize[key] = stats(\n                            _.filter(measures, o => o.id === key),\n                            getValue,\n                            decimals\n                        );\n                    });\n\n                    results.duration = fixedDecimals(duration / _second, decimals);\n                    results.size = size;\n\n                    const summary = this.getSummary(results);\n                    const status = this.getFeedback(results, resultsBySize);\n\n                    done(status, summary, results);\n                });\n            },\n\n            /**\n             * Gets the labels loaded for the tester\n             * @returns {object}\n             */\n            get labels() {\n                return labels;\n            },\n\n            /**\n             * Builds the results summary\n             * @param {object} results\n             * @returns {object}\n             */\n            getSummary(results) {\n                return {\n                    bandwidthMin: { message: labels.bandwidthMin, value: results.min + ' Mbps' },\n                    bandwidthMax: { message: labels.bandwidthMax, value: results.max + ' Mbps' },\n                    bandwidthAverage: { message: labels.bandwidthAverage, value: results.average + ' Mbps' }\n                };\n            },\n\n            /**\n             * Gets the feedback status for the provided result value\n             * @param {object} result\n             * @param {number} result.max\n             * @param {number} result.min\n             * @param {number} result.average\n             * @param {object} resultsBySize - result statistics grouped by size\n             * @returns {object}\n             */\n            getFeedback(result, resultsBySize) {\n                const avgResult = result.average;\n                const bandwidthUnit = initConfig.unit;\n                const threshold = initConfig.ideal;\n                const maxTestTakers = initConfig.max;\n                const max = threshold * bandwidthUnit;\n                const getStatusOptions = initConfig.minimumGlobalPercentage\n                    ? { minimumGlobalPercentage: initConfig.minimumGlobalPercentage }\n                    : {};\n                const baseBandwidth = avgResult;\n                let stable = true;\n\n                _.forEach(resultsBySize, resultBySize => {\n                    if (resultBySize.min / resultBySize.average < initConfig.fallbackThreshold) {\n                        stable = false;\n                    }\n                });\n\n                const status = getStatus((baseBandwidth / max) * 100, initConfig.feedbackThresholds, getStatusOptions);\n\n                let nb = Math.floor(baseBandwidth / bandwidthUnit);\n\n                if (nb > maxTestTakers) {\n                    nb = '>' + maxTestTakers;\n                }\n\n                status.id = initConfig.id;\n                status.title = labels.title;\n                status.feedback.legend = labels.legend;\n                status.quality.label = nb;\n\n                if (!stable) {\n                    status.feedback.type = 'warning';\n                    status.feedback.message = __(\n                        'Unstable bandwidth, temporary fluctuations in connection speed may affect test taker experience.'\n                    );\n                    status.feedback.legend = __('Simultaneous test takers under normal connection conditions.');\n                }\n\n                if (nb.toString().length > 2) {\n                    status.quality.wide = true;\n                }\n\n                return status;\n            }\n        };\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/upload/tester',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'async',\n    'util/url',\n    'taoClientDiagnostic/tools/getConfig',\n    'taoClientDiagnostic/tools/getLabels',\n    'taoClientDiagnostic/tools/getStatus'\n], function($, _, __, async, urlHelper, getConfig, getLabels, getStatus) {\n    'use strict';\n\n    /**\n     * A binary kilo bytes (KiB)\n     * @type {number}\n     * @private\n     */\n    const _kilo = 1024;\n\n    /**\n     * A binary mega bytes (MiB)\n     * @type {number}\n     * @private\n     */\n    const _mega = _kilo * _kilo;\n\n    /**\n     * Result of diagnostic\n     * @type {Array}\n     * @private\n     */\n    let data = [];\n\n    /**\n     * Default values for the upload speed tester\n     * @type {object}\n     * @private\n     */\n    const _defaults = {\n        id: 'upload',\n\n        // Size of data to sent to server during speed test in bytes\n        size: _mega,\n\n        // Optimal speed in bytes per second\n        optimal: _mega\n    };\n\n    /**\n     * A list of thresholds for bandwidth check\n     * @type {Array}\n     * @private\n     */\n    const _thresholds = [\n        {\n            threshold: 0,\n            message: __('Low upload speed'),\n            type: 'error'\n        },\n        {\n            threshold: 33,\n            message: __('Average upload speed'),\n            type: 'warning'\n        },\n        {\n            threshold: 66,\n            message: __('Good upload speed'),\n            type: 'success'\n        }\n    ];\n\n    /**\n     * List of translated texts per level.\n     * The level is provided through the config as a numeric value, starting from 1.\n     * @type {object}\n     * @private\n     */\n    const _messages = [\n        // level 1\n        {\n            title: __('Upload speed'),\n            status: __('Checking upload speed...'),\n            uploadAvg: __('Average upload speed'),\n            uploadMax: __('Max upload speed')\n        }\n    ];\n\n    /**\n     * Generate random string of given length\n     * @param {number} length\n     */\n    function generateStr(length) {\n        let text = '';\n        const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n        for (let i = 0; i < length; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n\n        return text;\n    }\n\n    /**\n     * Upload generated string to check upload speed.\n     * @param {number} size of string to upload in bytes\n     * @return {object} jqXHR\n     */\n    function upload(size) {\n        const url = urlHelper.route('upload', 'CompatibilityChecker', 'taoClientDiagnostic', { cache: Date.now() });\n        const str = generateStr(size);\n        data = [];\n\n        return $.ajax({\n            url: url,\n            type: 'POST',\n            data: {\n                upload: str\n            },\n            xhr: () => {\n                const xhr = new window.XMLHttpRequest();\n                const startTime = Date.now();\n                // Upload progress\n                xhr.upload.addEventListener(\n                    'progress',\n                    evt => {\n                        if (evt.lengthComputable) {\n                            const passedTime = Date.now() - startTime;\n                            data.push({\n                                time: passedTime,\n                                loaded: evt.loaded,\n                                speed: (evt.loaded * 8) / _mega / (passedTime / 1000)\n                            });\n                        }\n                    },\n                    false\n                );\n\n                return xhr;\n            }\n        });\n    }\n\n    /**\n     * Performs a upload speed test\n     * @param {object} config - Some optional configs\n     * @param {string} [config.id] - The identifier of the test\n     * @param {number} [config.size] - Size of data to sent to server during speed test in bytes\n     * @param {number} [config.optimal] - Optimal speed in bytes per second\n     * @param {string} [config.level] - The intensity level of the test. It will aim which messages list to use.\n     * @returns {object}\n     */\n    return function uploadTester(config) {\n        const initConfig = getConfig(config, _defaults);\n        const labels = getLabels(_messages, initConfig.level);\n\n        return {\n            /**\n             * Performs upload speed test, then call a function to provide the result\n             * @param {Function} done\n             */\n            start(done) {\n                upload(parseInt(initConfig.size, 10)).then(() => {\n                    let totalSpeed = 0;\n                    let maxSpeed = 0;\n\n                    _.forEach(data, val => {\n                        totalSpeed += val.speed;\n                        if (maxSpeed < val.speed) {\n                            maxSpeed = Math.round(val.speed * 100) / 100;\n                        }\n                    });\n                    const avgSpeed = Math.round((totalSpeed / data.length) * 100) / 100;\n                    const results = {\n                        max: maxSpeed,\n                        avg: avgSpeed,\n                        type: 'upload'\n                    };\n\n                    const status = this.getFeedback(avgSpeed);\n                    const summary = this.getSummary(results);\n\n                    done(status, summary, results);\n                });\n            },\n\n            /**\n             * Gets the labels loaded for the tester\n             * @returns {object}\n             */\n            get labels() {\n                return labels;\n            },\n\n            /**\n             * Builds the results summary\n             * @param {object} results\n             * @returns {object}\n             */\n            getSummary(results) {\n                return {\n                    uploadAvg: { message: labels.uploadAvg, value: `${results.avg} Mbps` },\n                    uploadMax: { message: labels.uploadMax, value: `${results.max} Mbps` }\n                };\n            },\n\n            /**\n             * Gets the feedback status for the provided result value\n             * @param {number} result\n             * @returns {object}\n             */\n            getFeedback(result) {\n                const optimal = initConfig.optimal / _mega;\n                const status = getStatus((100 / optimal) * result, _thresholds);\n\n                status.id = initConfig.id;\n                status.title = labels.title;\n\n                return status;\n            }\n        };\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/getPlatformInfo',['core/request', 'util/url', 'taoClientDiagnostic/tools/getConfig'], function(request, urlHelper, getConfig) {\n    'use strict';\n\n    /**\n     * Some default values\n     * @type {object}\n     * @private\n     */\n    const defaultConfig = {\n        browserVersionAction: 'whichBrowser',\n        browserVersionController: 'CompatibilityChecker',\n        browserVersionExtension: 'taoClientDiagnostic'\n    };\n\n    /**\n     * Gets the URL of the platform tester\n     * @param {Window} win\n     * @param {string} action\n     * @param {string} controller\n     * @param {string} extension\n     * @returns {string}\n     * @private\n     */\n    function getTesterUrl(win, action, controller, extension) {\n        const document = win.document;\n        const navigator = win.navigator;\n        const screen = win.screen;\n        const params = {};\n        let e = 0;\n        let f = 0;\n\n        // append the browser user agent\n        params.ua = navigator.userAgent;\n\n        // detect browser family\n        e |= win.ActiveXObject ? 1 : 0;\n        e |= win.opera ? 2 : 0;\n        e |= win.chrome ? 4 : 0;\n        e |= 'getBoxObjectFor' in document || 'mozInnerScreenX' in win ? 8 : 0;\n        e |=\n            'WebKitCSSMatrix' in win || 'WebKitPoint' in win || 'webkitStorageInfo' in win || 'webkitURL' in win\n                ? 16\n                : 0;\n        e |= e & 16 && {}.toString.toString().indexOf('\\n') === -1 ? 32 : 0;\n        params.e = e;\n\n        // gather info about browser functionality\n        f |= 'sandbox' in document.createElement('iframe') ? 1 : 0;\n        f |= 'WebSocket' in win ? 2 : 0;\n        f |= win.Worker ? 4 : 0;\n        f |= win.applicationCache ? 8 : 0;\n        f |= win.history && win.history.pushState ? 16 : 0;\n        f |= document.documentElement.webkitRequestFullScreen ? 32 : 0;\n        f |= 'FileReader' in win ? 64 : 0;\n        params.f = f;\n\n        // append a unique ID\n        params.r = Math.random()\n            .toString(36)\n            .substring(7);\n\n        // get the screen size\n        params.w = screen.width;\n        params.h = screen.height;\n\n        return urlHelper.route(action, controller, extension, params);\n    }\n\n    /**\n     * Check the user browser and os.\n     *\n     * This helper performs a server request to gather information about the user browser and os.\n     * @param {Window} window - Need an access to the window object\n     * @param {object} config\n     * @param {string} config.browserVersionAction - The name of the action to call to get the browser checker\n     * @param {string} config.browserVersionController - The name of the controller to call to get the browser checker\n     * @param {string} config.browserVersionExtension - The name of the extension containing the controller to call to get the browser checker\n     * @returns {Promise}\n     */\n    return function getPlatformInfo(win, config) {\n        config = getConfig(config, defaultConfig);\n\n        const url = getTesterUrl(\n            win,\n            config.browserVersionAction,\n            config.browserVersionController,\n            config.browserVersionExtension\n        );\n\n        return request({ url, noToken: true });\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/browser/tester',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'util/url',\n    'core/logger',\n    'core/request',\n    'taoClientDiagnostic/tools/getConfig',\n    'taoClientDiagnostic/tools/getLabels',\n    'taoClientDiagnostic/tools/getPlatformInfo',\n    'taoClientDiagnostic/tools/getStatus'\n], function($, _, __, urlHelper, loggerFactory, request, getConfig, getLabels, getPlatformInfo, getStatus) {\n    'use strict';\n\n    /**\n     * @type {logger}\n     * @private\n     */\n    const logger = loggerFactory('taoClientDiagnostic/browser');\n\n    /**\n     * Some default values\n     * @type {object}\n     * @private\n     */\n    const _defaults = {\n        id: 'browser',\n        browserVersionAction: 'whichBrowser',\n        browserVersionController: 'CompatibilityChecker',\n        browserVersionExtension: 'taoClientDiagnostic',\n        action: 'check',\n        controller: 'DiagnosticChecker',\n        browserslistUrl: 'https://oat-sa.github.io/browserslist-app-tao/api.json'\n    };\n\n    /**\n     * Placeholder variables for custom messages\n     * @type {object}\n     * @private\n     */\n    const _placeHolders = {\n        CURRENT_BROWSER: '%CURRENT_BROWSER%',\n        CURRENT_OS: '%CURRENT_OS%'\n    };\n\n    /**\n     * List of translated texts per level.\n     * The level is provided through the config as a numeric value, starting from 1.\n     * @type {object}\n     * @private\n     */\n    const _messages = [\n        // level 1\n        {\n            title: __('Operating system and web browser'),\n            status: __('Checking the browser...'),\n            browser: __('Web browser'),\n            os: __('Operating system')\n        }\n    ];\n\n    /**\n     * Fallback name to recover from connectivity error\n     * @param {string}\n     * @private\n     */\n    const unknown = __('Unknown');\n\n    /**\n     * Performs a browser support test\n     *\n     * @param {object} config - Some optional configs\n     * @param {string} [config.id] - The identifier of the test\n     * @param {string} [config.action] - The name of the action to call to get the browser checker\n     * @param {string} [config.controller] - The name of the controller to call to get the browser checker\n     * @param {string} [config.extension] - The name of the extension containing the controller to call to get the browser checker\n     * @param {string} [config.level] - The intensity level of the test. It will aim which messages list to use.\n     * @returns {object}\n     */\n    return function browserTester(config) {\n        const initConfig = getConfig(config, _defaults);\n        const labels = getLabels(_messages, initConfig.level);\n\n        /**\n         * Fetches the list of fully supported browsers\n         * @returns {Promise<Array>}\n         * @private\n         */\n        const fetchBrowserList = () => request({ url: initConfig.browserslistUrl, noToken: true }).catch(() => []);\n\n        /**\n         * Checks the current browser against the list of fully supported browsers\n         * @param platformInfo\n         * @returns {Promise<boolean>}\n         * @private\n         */\n        function checkBrowserSupport(platformInfo) {\n            const currentDevice = platformInfo.isMobile ? 'mobile' : 'desktop';\n            const currentOS = platformInfo.os.toLowerCase();\n            const currentBrowser = platformInfo.browser.toLowerCase();\n            const currentVersion = platformInfo.browserVersion;\n            return fetchBrowserList().then(list =>\n                list.some(entry => {\n                    const { browser, device, os, versions } = entry;\n\n                    if (currentDevice !== device) {\n                        return false;\n                    }\n\n                    if (os && os.toLowerCase() !== currentOS) {\n                        return false;\n                    }\n\n                    if (browser.toLowerCase() !== currentBrowser) {\n                        return false;\n                    }\n\n                    // Using lodash because of IE support.\n                    // Some useful traversal algorithms are needed and they don't have polyfill in our bundles.\n                    // The versions come with an inconsistent format and they need to be processed upfront.\n                    return _(versions)\n                        .map(version => version.split('-'))\n                        .flatten()\n                        .value()\n                        .some(version => currentVersion.localeCompare(version, void 0, { numeric: true }) >= 0);\n                }, {})\n            );\n        }\n\n        return {\n            /**\n             * Performs a browser support test, then call a function to provide the result\n             * @param {Function} done\n             */\n            start(done) {\n                getPlatformInfo(window, initConfig)\n                    .catch(err => {\n                        logger.error(err);\n                        return {\n                            browser: unknown,\n                            browserVersion: '',\n                            os: unknown,\n                            osVersion: '',\n                            isMobile: false\n                        };\n                    })\n                    .then(platformInfo =>\n                        checkBrowserSupport(platformInfo).then(browserSupported =>\n                            Object.assign(platformInfo, { browserSupported })\n                        )\n                    )\n                    .then(platformInfo => {\n                        request({\n                            url: urlHelper.route(initConfig.action, initConfig.controller, initConfig.extension),\n                            data: platformInfo,\n                            method: 'POST',\n                            noToken: true\n                        })\n                            .catch(() => {\n                                return {\n                                    success: false,\n                                    type: 'error',\n                                    message: __('Unable to validate the data as the server did not respond in time.')\n                                };\n                            })\n                            .then(data => {\n                                const percentage = 'success' === data.type ? 100 : 'warning' === data.type ? 33 : 0;\n                                const status = this.getFeedback(percentage, data);\n                                const summary = this.getSummary(platformInfo);\n\n                                status.customMsgRenderer = customMsg => {\n                                    return (customMsg || '')\n                                        .replace(_placeHolders.CURRENT_BROWSER, summary.browser.value)\n                                        .replace(_placeHolders.CURRENT_OS, summary.os.value);\n                                };\n\n                                done(status, summary, platformInfo);\n                            });\n                    });\n            },\n\n            /**\n             * Gets the labels loaded for the tester\n             * @returns {object}\n             */\n            get labels() {\n                return labels;\n            },\n\n            /**\n             * Builds the results summary\n             * @param {object} results\n             * @returns {object}\n             */\n            getSummary(results) {\n                const currentBrowser = `${results.browser} ${results.browserVersion}`;\n                const currentOs = `${results.os} ${results.osVersion}`;\n                return {\n                    browser: {\n                        message: labels.browser,\n                        value: currentBrowser\n                    },\n                    os: {\n                        message: labels.os,\n                        value: currentOs\n                    }\n                };\n            },\n\n            /**\n             * Gets the feedback status for the provided result value\n             * @param {number} result\n             * @param {object} data\n             * @returns {object}\n             */\n            getFeedback(result, data) {\n                const status = getStatus(result, data);\n\n                status.id = initConfig.id;\n                status.title = labels.title;\n\n                return status;\n            }\n        };\n    };\n});\n\n","\ndefine('tpl!taoClientDiagnostic/tools/diagnostic/tpl/main', ['handlebars'], function(hb){ return hb.template({\"1\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<p>\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"header\") || (depth0 != null ? lookupProperty(depth0,\"header\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"header\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":6,\"column\":25},\"end\":{\"line\":6,\"column\":35}}}) : helper)))\n    + \"</p>\";\n},\"3\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<p>\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"info\") || (depth0 != null ? lookupProperty(depth0,\"info\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"info\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":7,\"column\":23},\"end\":{\"line\":7,\"column\":31}}}) : helper)))\n    + \"</p>\";\n},\"5\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<p>\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"setup\") || (depth0 != null ? lookupProperty(depth0,\"setup\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"setup\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":8,\"column\":24},\"end\":{\"line\":8,\"column\":33}}}) : helper)))\n    + \"</p>\";\n},\"7\":function(container,depth0,helpers,partials,data) {\n    var lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"        <p>\\n            <label for=\\\"school_id\\\">\"\n    + container.escapeExpression((lookupProperty(helpers,\"__\")||(depth0 && lookupProperty(depth0,\"__\"))||container.hooks.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),\"School ID:\",{\"name\":\"__\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":11,\"column\":35},\"end\":{\"line\":11,\"column\":54}}}))\n    + \"</label>\\n            <input type=\\\"text\\\" data-control=\\\"school_id\\\" id=\\\"school_id\\\" name=\\\"school_id\\\" maxlength=\\\"255\\\" placeholder=\\\"\"\n    + container.escapeExpression((lookupProperty(helpers,\"__\")||(depth0 && lookupProperty(depth0,\"__\"))||container.hooks.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),\"School ID\",{\"name\":\"__\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":12,\"column\":117},\"end\":{\"line\":12,\"column\":135}}}))\n    + \"\\\" />\\n        </p>\\n        <p>\\n            <label for=\\\"workstation\\\">\"\n    + container.escapeExpression((lookupProperty(helpers,\"__\")||(depth0 && lookupProperty(depth0,\"__\"))||container.hooks.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),\"Workstation:\",{\"name\":\"__\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":15,\"column\":37},\"end\":{\"line\":15,\"column\":58}}}))\n    + \"</label>\\n            <input type=\\\"text\\\" data-control=\\\"workstation\\\" id=\\\"workstation\\\" name=\\\"workstation\\\" maxlength=\\\"64\\\" placeholder=\\\"\"\n    + container.escapeExpression((lookupProperty(helpers,\"__\")||(depth0 && lookupProperty(depth0,\"__\"))||container.hooks.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),\"Workstation name\",{\"name\":\"__\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":16,\"column\":122},\"end\":{\"line\":16,\"column\":147}}}))\n    + \"\\\" />\\n        </p>\\n\";\n},\"9\":function(container,depth0,helpers,partials,data) {\n    var stack1, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"validateSchoolName\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(10, data, 0),\"inverse\":container.program(12, data, 0),\"data\":data,\"loc\":{\"start\":{\"line\":20,\"column\":12},\"end\":{\"line\":34,\"column\":19}}})) != null ? stack1 : \"\");\n},\"10\":function(container,depth0,helpers,partials,data) {\n    var lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"        <p>\\n            <label for=\\\"school_number\\\">\"\n    + container.escapeExpression((lookupProperty(helpers,\"__\")||(depth0 && lookupProperty(depth0,\"__\"))||container.hooks.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),\"School number:\",{\"name\":\"__\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":22,\"column\":39},\"end\":{\"line\":22,\"column\":62}}}))\n    + \"</label>\\n            <input type=\\\"text\\\" data-control=\\\"school_number\\\" id=\\\"school_number\\\" name=\\\"school_number\\\" maxlength=\\\"10\\\" placeholder=\\\"\"\n    + container.escapeExpression((lookupProperty(helpers,\"__\")||(depth0 && lookupProperty(depth0,\"__\"))||container.hooks.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),\"School number\",{\"name\":\"__\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":23,\"column\":128},\"end\":{\"line\":23,\"column\":150}}}))\n    + \"\\\" />\\n        </p>\\n        <p>\\n            <label for=\\\"school_pin\\\">\"\n    + container.escapeExpression((lookupProperty(helpers,\"__\")||(depth0 && lookupProperty(depth0,\"__\"))||container.hooks.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),\"School PIN:\",{\"name\":\"__\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":26,\"column\":36},\"end\":{\"line\":26,\"column\":56}}}))\n    + \"</label>\\n            <input type=\\\"text\\\" data-control=\\\"school_pin\\\" id=\\\"school_pin\\\" name=\\\"school_pin\\\" maxlength=\\\"4\\\" placeholder=\\\"\"\n    + container.escapeExpression((lookupProperty(helpers,\"__\")||(depth0 && lookupProperty(depth0,\"__\"))||container.hooks.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),\"School PIN code (4 digits)\",{\"name\":\"__\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":27,\"column\":118},\"end\":{\"line\":27,\"column\":153}}}))\n    + \"\\\" />\\n        </p>\\n\";\n},\"12\":function(container,depth0,helpers,partials,data) {\n    var lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"        <p>\\n            <label for=\\\"school_name\\\">\"\n    + container.escapeExpression((lookupProperty(helpers,\"__\")||(depth0 && lookupProperty(depth0,\"__\"))||container.hooks.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),\"School name:\",{\"name\":\"__\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":31,\"column\":37},\"end\":{\"line\":31,\"column\":58}}}))\n    + \"</label>\\n            <input type=\\\"text\\\" data-control=\\\"school_name\\\" id=\\\"school_name\\\" name=\\\"school_name\\\" maxlength=\\\"255\\\" placeholder=\\\"\"\n    + container.escapeExpression((lookupProperty(helpers,\"__\")||(depth0 && lookupProperty(depth0,\"__\"))||container.hooks.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),\"School name\",{\"name\":\"__\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":32,\"column\":123},\"end\":{\"line\":32,\"column\":143}}}))\n    + \"\\\" />\\n        </p>\\n\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<div class=\\\"diagnostics-main-area\\\">\\n\\n    <h1>\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"title\") || (depth0 != null ? lookupProperty(depth0,\"title\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"title\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":3,\"column\":8},\"end\":{\"line\":3,\"column\":17}}}) : helper)))\n    + \"</h1>\\n\\n    <div class=\\\"intro\\\">\\n        \"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"header\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":6,\"column\":8},\"end\":{\"line\":6,\"column\":46}}})) != null ? stack1 : \"\")\n    + \"\\n        \"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"info\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(3, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":42}}})) != null ? stack1 : \"\")\n    + \"\\n        \"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"setup\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(5, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":44}}})) != null ? stack1 : \"\")\n    + \"\\n\"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"requireSchoolId\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(7, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":18,\"column\":15}}})) != null ? stack1 : \"\")\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"requireSchoolName\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(9, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":35,\"column\":15}}})) != null ? stack1 : \"\")\n    + \"    </div>\\n\\n    <div class=\\\"clearfix\\\">\\n        <button data-action=\\\"test-launcher\\\" class=\\\"btn-info small rgt\\\">\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"button\") || (depth0 != null ? lookupProperty(depth0,\"button\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"button\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":39,\"column\":71},\"end\":{\"line\":39,\"column\":81}}}) : helper)))\n    + \"</button>\\n    </div>\\n\\n    <ul class=\\\"plain results\\\"></ul>\\n\\n    <div class=\\\"status\\\">\\n        <h2></h2>\\n    </div>\\n\\n</div>\";\n},\"useData\":true}); });\n","\ndefine('tpl!taoClientDiagnostic/tools/diagnostic/tpl/result', ['handlebars'], function(hb){ return hb.template({\"1\":function(container,depth0,helpers,partials,data) {\n    var lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"    <div class=\\\"clearfix\\\">\\n        <button data-action=\\\"show-details\\\" class=\\\"rgt btn-info small\\\">\"\n    + container.escapeExpression((lookupProperty(helpers,\"__\")||(depth0 && lookupProperty(depth0,\"__\"))||container.hooks.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),\"Show Details\",{\"name\":\"__\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":7,\"column\":70},\"end\":{\"line\":7,\"column\":91}}}))\n    + \"</button>\\n        <button data-action=\\\"hide-details\\\" class=\\\"rgt btn-info small hidden\\\">\"\n    + container.escapeExpression((lookupProperty(helpers,\"__\")||(depth0 && lookupProperty(depth0,\"__\"))||container.hooks.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),\"Hide Details\",{\"name\":\"__\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":8,\"column\":77},\"end\":{\"line\":8,\"column\":98}}}))\n    + \"</button>\\n        <div class=\\\"details hidden\\\"></div>\\n    </div>\\n\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<li data-result=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"id\") || (depth0 != null ? lookupProperty(depth0,\"id\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"id\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":1,\"column\":17},\"end\":{\"line\":1,\"column\":23}}}) : helper)))\n    + \"\\\">\\n    <h2>\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"title\") || (depth0 != null ? lookupProperty(depth0,\"title\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"title\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":2,\"column\":8},\"end\":{\"line\":2,\"column\":17}}}) : helper)))\n    + \"</h2>\\n    <div class=\\\"result\\\"></div>\\n\\n\"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"details\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":5,\"column\":4},\"end\":{\"line\":11,\"column\":11}}})) != null ? stack1 : \"\")\n    + \"</li>\";\n},\"useData\":true}); });\n","\ndefine('tpl!taoClientDiagnostic/tools/diagnostic/tpl/details', ['handlebars'], function(hb){ return hb.template({\"1\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"                <tr><td>\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"message\") || (depth0 != null ? lookupProperty(depth0,\"message\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"message\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":7,\"column\":24},\"end\":{\"line\":7,\"column\":35}}}) : helper)))\n    + \"</td><td>\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"value\") || (depth0 != null ? lookupProperty(depth0,\"value\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"value\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":7,\"column\":44},\"end\":{\"line\":7,\"column\":53}}}) : helper)))\n    + \"</td></tr>\\n\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<div class=\\\"details\\\">\\n    <h2>\"\n    + container.escapeExpression((lookupProperty(helpers,\"__\")||(depth0 && lookupProperty(depth0,\"__\"))||container.hooks.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),\"Details\",{\"name\":\"__\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":2,\"column\":8},\"end\":{\"line\":2,\"column\":24}}}))\n    + \"</h2>\\n    <div>\\n        <table class=\\\"matrix\\\">\\n            <tbody>\\n\"\n    + ((stack1 = lookupProperty(helpers,\"each\").call(depth0 != null ? depth0 : (container.nullContext || {}),depth0,{\"name\":\"each\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":6,\"column\":12},\"end\":{\"line\":8,\"column\":21}}})) != null ? stack1 : \"\")\n    + \"            </tbody>\\n        </table>\\n    </div>\\n</div>\";\n},\"useData\":true}); });\n","\ndefine('tpl!taoClientDiagnostic/tools/diagnostic/tpl/feedback', ['handlebars'], function(hb){ return hb.template({\"1\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<div class=\\\"legend\\\">\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"legend\") || (depth0 != null ? lookupProperty(depth0,\"legend\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"legend\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":4,\"column\":38},\"end\":{\"line\":4,\"column\":48}}}) : helper)))\n    + \"</div>\";\n},\"3\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<div class=\\\"customMsg\\\">\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"customMsg\") || (depth0 != null ? lookupProperty(depth0,\"customMsg\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"customMsg\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":5,\"column\":44},\"end\":{\"line\":5,\"column\":57}}}) : helper)))\n    + \"</div>\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<div class=\\\"small feedback feedback-\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"type\") || (depth0 != null ? lookupProperty(depth0,\"type\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"type\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":1,\"column\":36},\"end\":{\"line\":1,\"column\":44}}}) : helper)))\n    + \"\\\">\\n    <span class=\\\"icon icon-\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"type\") || (depth0 != null ? lookupProperty(depth0,\"type\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"type\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":2,\"column\":27},\"end\":{\"line\":2,\"column\":35}}}) : helper)))\n    + \"\\\"></span>\\n    <span class=\\\"msg\\\">\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"message\") || (depth0 != null ? lookupProperty(depth0,\"message\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"message\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":3,\"column\":22},\"end\":{\"line\":3,\"column\":33}}}) : helper)))\n    + \"</span>\\n    \"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"legend\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":4,\"column\":4},\"end\":{\"line\":4,\"column\":61}}})) != null ? stack1 : \"\")\n    + \"\\n    \"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"customMsg\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(3, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":5,\"column\":4},\"end\":{\"line\":5,\"column\":70}}})) != null ? stack1 : \"\")\n    + \"\\n</div>\";\n},\"useData\":true}); });\n","\ndefine('tpl!taoClientDiagnostic/tools/diagnostic/tpl/quality-bar', ['handlebars'], function(hb){ return hb.template({\"1\":function(container,depth0,helpers,partials,data) {\n    return \" wide\";\n},\"3\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \" title=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"label\") || (depth0 != null ? lookupProperty(depth0,\"label\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"label\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":2,\"column\":79},\"end\":{\"line\":2,\"column\":88}}}) : helper)))\n    + \"\\\"\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<div class=\\\"quality-bar\\\">\\n    <div class=\\\"quality-indicator\"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"wide\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":2,\"column\":33},\"end\":{\"line\":2,\"column\":57}}})) != null ? stack1 : \"\")\n    + \"\\\"\"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"label\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(3, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":2,\"column\":58},\"end\":{\"line\":2,\"column\":96}}})) != null ? stack1 : \"\")\n    + \"></div>\\n</div>\";\n},\"useData\":true}); });\n","\ndefine('css!taoClientDiagnosticCss/diagnostics',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/diagnostic/diagnostic',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'async',\n    'ui/component',\n    'core/logger',\n    'core/store',\n    'core/request',\n    'core/dataProvider/request',\n    'ui/dialog/alert',\n    'ui/feedback',\n    'util/url',\n    'taoClientDiagnostic/tools/performances/tester',\n    'taoClientDiagnostic/tools/bandwidth/tester',\n    'taoClientDiagnostic/tools/upload/tester',\n    'taoClientDiagnostic/tools/browser/tester',\n    'taoClientDiagnostic/tools/getStatus',\n    'taoClientDiagnostic/tools/getConfig',\n    'tpl!taoClientDiagnostic/tools/diagnostic/tpl/main',\n    'tpl!taoClientDiagnostic/tools/diagnostic/tpl/result',\n    'tpl!taoClientDiagnostic/tools/diagnostic/tpl/details',\n    'tpl!taoClientDiagnostic/tools/diagnostic/tpl/feedback',\n    'tpl!taoClientDiagnostic/tools/diagnostic/tpl/quality-bar',\n    'css!taoClientDiagnosticCss/diagnostics'\n], function(\n    $,\n    _,\n    __,\n    async,\n    component,\n    loggerFactory,\n    store,\n    request,\n    requestData,\n    dialogAlert,\n    feedback,\n    urlHelper,\n    performancesTester,\n    bandwidthTester,\n    uploadTester,\n    browserTester,\n    getStatus,\n    getConfig,\n    mainTpl,\n    resultTpl,\n    detailsTpl,\n    feedbackTpl,\n    qualityBarTpl\n) {\n    'use strict';\n    /**\n     * @type {logger}\n     * @private\n     */\n    const logger = loggerFactory('taoClientDiagnostic/diagnostic');\n\n    /**\n     * Some default values\n     * @type {object}\n     * @private\n     */\n    const _defaults = {\n        title: __('System Compatibility'),\n        header: __(\n            'This tool will run a number of tests in order to establish how well your current environment is suitable to run the TAO platform.'\n        ),\n        info: __('Be aware that these tests will take up to several minutes.'),\n        button: __('Test system compatibility'),\n        actionStore: 'storeData',\n        actionSchool: 'schoolName',\n        controller: 'DiagnosticChecker',\n        extension: 'taoClientDiagnostic',\n        actionDropId: 'deleteId',\n        storeAllRuns: false,\n        configurableText: {}\n    };\n\n    /**\n     * A list of thresholds for summary\n     * @type {Array}\n     * @private\n     */\n    const _thresholds = [\n        {\n            threshold: 0,\n            message: __('Your system requires a compatibility update, please contact your system administrator.'),\n            type: 'error'\n        },\n        {\n            threshold: 33,\n            message: __('Your system is not optimal, please contact your system administrator.'),\n            type: 'warning'\n        },\n        {\n            threshold: 66,\n            message: __('Your system is fully compliant.'),\n            type: 'success'\n        }\n    ];\n\n    /**\n     * Defines a diagnostic tool\n     * @type {object}\n     */\n    const diagnostic = {\n        /**\n         * Updates the displayed status\n         * @param {string} status\n         * @returns {diagnostic}\n         * @private\n         */\n        changeStatus(status) {\n            if (this.is('rendered')) {\n                this.controls.$status.html(status);\n            }\n            return this;\n        },\n\n        /**\n         * Sends the detailed stats to the server\n         * @param {string} type The type of stats\n         * @param {object} data The stats details\n         * @param {Function} done A callback method called once server has responded\n         */\n        store(type, data, done) {\n            const config = this.config;\n            const url = urlHelper.route(config.actionStore, config.controller, config.extension, config.storeParams);\n\n            data = _.omit(data, 'values');\n            data.type = type;\n\n            request({ url, data, method: 'POST', noToken: true })\n                .then(done)\n                .catch(err => {\n                    logger.error(err);\n                    feedback().error(__('Unable to save the results! Please check your connection.'));\n                    done();\n                });\n        },\n\n        /**\n         * Retrieve a custom message from the config\n         * @param key\n         * @returns {*}\n         */\n        getCustomMsg(key) {\n            return this.config.configurableText[key];\n        },\n\n        /**\n         * Enrich the feedback object with a custom message if the test has failed\n         * @param {object} status - the test result\n         * @param {string} msg - the custom message\n         */\n        addCustomFeedbackMsg(status, msg) {\n            if (this.hasFailed(status) && msg) {\n                if (_.isFunction(status.customMsgRenderer)) {\n                    msg = status.customMsgRenderer(msg);\n                }\n                status.feedback = status.feedback || {};\n                status.feedback.customMsg = msg;\n            }\n        },\n\n        /**\n         * Check if a result is considered as failed\n         * @param {object} result\n         * @returns {boolean}\n         */\n        hasFailed(result) {\n            return !(result && result.feedback && result.feedback.type === 'success');\n        },\n\n        /**\n         * Add a result row\n         * @param {object} result\n         * @returns {diagnostic}\n         */\n        addResult(result) {\n            if (this.is('rendered')) {\n                // adjust the width of the displayed label, if any, to the text length\n                if (result.quality && result.quality.label && result.quality.label.toString().length > 2) {\n                    result.quality.wide = true;\n                }\n\n                // create and append the result to the displayed list\n                const $main = $(resultTpl(result));\n                const $result = $main.find('.result');\n                if (result.feedback) {\n                    $result.append($(feedbackTpl(result.feedback)));\n                }\n                if (result.quality) {\n                    $result.append($(qualityBarTpl(result.quality)));\n                }\n                if (result.details) {\n                    $main.find('.details').append($(detailsTpl(result.details)));\n                }\n\n                const $indicator = $main.find('.quality-indicator');\n                this.controls.$results.append($main);\n\n                // the result is hidden by default, show it with a little animation\n                $main.fadeIn(() => {\n                    if ($indicator.length) {\n                        $indicator.animate({\n                            left: (result.percentage * $main.outerWidth()) / 100 - $indicator.outerWidth() / 2\n                        });\n                    }\n                });\n            }\n\n            return this;\n        },\n\n        /**\n         * Removes the last results if any\n         * @returns {diagnostic}\n         */\n        cleanUp() {\n            this.controls.$results.empty();\n            return this;\n        },\n\n        /**\n         * Enables the start button\n         * @returns {diagnostic}\n         */\n        enable() {\n            this.controls.$start.removeClass('hidden');\n            return this;\n        },\n\n        /**\n         * Disables the start button\n         * @returns {diagnostic}\n         */\n        disable() {\n            this.controls.$start.addClass('hidden');\n            return this;\n        },\n\n        /**\n         * Does some preparations before starting the diagnostics\n         * @returns {diagnostic}\n         * @private\n         */\n        prepare() {\n            /**\n             * Notifies the diagnostic start\n             * @event diagnostic#start\n             */\n            this.trigger('start');\n            this.changeStatus(__('Starting...'));\n            this.setState('running', true);\n            this.setState('done', false);\n\n            // first we need a clean space to display the results, so remove the last results if any\n            this.cleanUp();\n\n            // remove the start button during the diagnostic\n            this.disable();\n\n            return this;\n        },\n\n        /**\n         * Does some post process after ending the diagnostics\n         * @returns {diagnostic}\n         * @private\n         */\n        finish() {\n            const config = this.config;\n\n            // restore the start button to allow a new diagnostic run\n            this.enable();\n\n            if (config.storeAllRuns) {\n                this.deleteIdentifier();\n            }\n\n            /**\n             * Notifies the diagnostic end\n             * @event diagnostic#end\n             */\n            this.trigger('end');\n            this.changeStatus(__('Done!'));\n            this.setState('running', false);\n            this.setState('done', true);\n\n            return this;\n        },\n\n        /**\n         * delete unique id for this test session (next test will generate new one)\n         */\n        deleteIdentifier() {\n            const url = urlHelper.route(this.config.actionDropId, this.config.controller, this.config.extension);\n            return request({ url, method: 'POST', noToken: true });\n        },\n\n        /**\n         * Runs the diagnostics\n         * @returns {diagnostic}\n         */\n        run() {\n            const information = [];\n            const scores = {};\n            const testers = [];\n            const customInput = this.getCustomInput();\n\n            const doRun = () => {\n                // common handling for testers\n                const doCheck = (testerConfig, cb) => {\n                    const testerId = testerConfig.id;\n\n                    /**\n                     * Notifies the start of a tester operation\n                     * @event diagnostic#starttester\n                     * @param {string} name - The name of the tester\n                     */\n                    this.trigger('starttester', testerId);\n                    this.setState(testerId, true);\n\n                    /**\n                     * Process the diagnostic from the loaded tester\n                     * @param {Function} testerFactory\n                     * @private\n                     */\n                    const processTester = testerFactory => {\n                        const tester = testerFactory(getConfig(testerConfig, this.config), this);\n                        this.changeStatus(tester.labels.status);\n                        tester.start((status, details, results) => {\n                            if (testerConfig.customMsgKey) {\n                                const customMsg = this.getCustomMsg(testerConfig.customMsgKey);\n                                this.addCustomFeedbackMsg(status, customMsg);\n                            }\n\n                            // the returned details must be ingested into the main details list\n                            _.forEach(details, info => information.push(info));\n                            scores[status.id] = status;\n\n                            /**\n                             * Notifies the end of a tester operation\n                             * @event diagnostic#endtester\n                             * @param {string} id - The identifier of the tester\n                             * @param {Array} results - The results of the test\n                             */\n                            this.trigger('endtester', testerId, status);\n                            this.setState(testerId, false);\n\n                            // results should be filtered in order to encode complex data\n                            results = _.mapValues(results, value => {\n                                switch (typeof value) {\n                                    case 'boolean':\n                                        return value ? 1 : 0;\n                                    case 'object':\n                                        return JSON.stringify(value);\n                                }\n                                return value;\n                            });\n\n                            // send the data to store\n                            this.store(testerId, results, () => {\n                                this.addResult(status);\n                                cb();\n                            });\n                        });\n                    };\n\n                    /**\n                     * React to loading failure\n                     * @param {Error} err\n                     * @private\n                     */\n                    const processFailure = err => {\n                        logger.error(err);\n                        feedback().error(\n                            __(\n                                'Unable to process with the diagnostic tester %s. The tester module is unreachable.',\n                                testerId\n                            )\n                        );\n                        cb();\n                    };\n\n                    require([testerConfig.tester], processTester, processFailure);\n                };\n\n                if (this.is('rendered')) {\n                    // set up the component to a new run\n                    this.prepare();\n\n                    _.forEach(this.config.testers, (testerConfig, testerId) => {\n                        testerConfig.id = testerConfig.id || testerId;\n                        if (testerConfig.enabled) {\n                            testers.push(cb => doCheck(testerConfig, cb));\n                        }\n                    });\n\n                    // launch each testers in series, then display the results\n                    async.series(testers, () => {\n                        // pick the lowest percentage as the main score\n                        const total = _.min(scores, 'globalPercentage');\n\n                        // get a status according to the main score\n                        const status = getStatus(total.globalPercentage, _thresholds);\n\n                        // display the result\n                        status.title = __('Total');\n                        status.id = 'total';\n                        this.addCustomFeedbackMsg(status, this.config.configurableText.diagTotalCheckResult);\n\n                        status.details = information;\n                        this.addResult(status);\n\n                        // done !\n                        this.finish();\n                    });\n                }\n            };\n\n            if (_.size(customInput) > 0) {\n                this.store('custom_input', customInput, doRun);\n            } else {\n                doRun();\n            }\n\n            return this;\n        },\n\n        getCustomInput() {\n            const vars = {};\n\n            window.location.href.replace(location.hash, '').replace(/[?&]+([^=&]+)=?([^&]*)?/gi, (m, key, value) => {\n                if (_.has(this.config['customInput'], key)) {\n                    vars[key] = typeof value !== 'undefined' ? value : '';\n                }\n            });\n\n            return vars;\n        }\n    };\n\n    /**\n     * Builds an instance of the diagnostic tool\n     * @param {object} container - Container in which the initialisation will render the diagnostic\n     * @param {object} config\n     * @param {string} [config.title] - The displayed title\n     * @param {string} [config.header] - A header text displayed to describe the component\n     * @param {string} [config.info] - An information text displayed to warn about run duration\n     * @param {string} [config.button] - The caption of the start button\n     * @param {string} [config.actionStore] - The name of the action to call to store the results\n     * @param {string} [config.actionCheck] - The name of the action to call to check the browser results\n     * @param {string} [config.actionSchool] - The name of the action to call to get the school name\n     * @param {string} [config.controller] - The name of the controller to call\n     * @param {string} [config.extension] - The name of the extension containing the controller\n     * @param {object} [config.storeParams] - A list of additional parameters to send with diagnostic results\n     * @param {boolean} [config.requireSchoolName] - If `true` require a school name to allow the tests to start\n     * @param {boolean} [config.requireSchoolId] - If `true` require a school ID to allow the tests to start\n     * @param {boolean} [config.validateSchoolName] - If `true` require a school number and a PIN to get the school name and to allow the tests to start\n     *\n     * @param {string} [config.browser.action] - The name of the action to call to get the browser checker\n     * @param {string} [config.browser.controller] - The name of the controller to call to get the browser checker\n     * @param {string} [config.browser.extension] - The name of the extension containing the controller to call to get the browser checker\n     *\n     * @param {number} [config.bandwidth.unit] - The typical bandwidth needed for a test taker (Mbps)\n     * @param {Array} [config.bandwidth.ideal] - The thresholds for optimal bandwidth, one by bar\n     * @param {number} [config.bandwidth.max] - Maximum number of test takers to display\n     *\n     * @param {Array} [config.performances.samples] - A list of samples to render in order to compute the rendering performances\n     * @param {number} [config.performances.occurrences] - The number of renderings by samples\n     * @param {number} [config.performances.timeout] - Max allowed duration for a sample rendering\n     * @param {number} [config.performances.optimal] - The threshold for optimal performances\n     * @param {number} [config.performances.threshold] - The threshold for minimal performances\n     * @returns {diagnostic}\n     */\n    return function diagnosticFactory(container, config) {\n        // fix the translations for content loaded from config files\n        if (config) {\n            _.forEach(['title', 'header', 'footer', 'info', 'button'], name => {\n                if (config[name]) {\n                    config[name] = __(config[name]);\n                }\n            });\n        }\n\n        const diagComponent = component(diagnostic, _defaults)\n            .setTemplate(mainTpl)\n\n            // uninstalls the component\n            .on('destroy', function onDiagnosticDestroy() {\n                this.controls = null;\n            })\n\n            // initialise component\n            .on('init', function onDiagnosticInit() {\n                this.render(container);\n            })\n            // renders the component\n            .on('render', function onDiagnosticRender() {\n                /**\n                 * Starts the tests\n                 * @param {object} [data]\n                 * @private\n                 */\n                const runDiagnostics = data => {\n                    // append the school name to the queries\n                    if (data && _.isPlainObject(data)) {\n                        this.config.storeParams = _.assign(this.config.storeParams || {}, data);\n                    }\n\n                    this.run();\n                };\n\n                /**\n                 * Default launcher\n                 * @private\n                 */\n                let launch = () => runDiagnostics();\n\n                /**\n                 * Gets a control by its registered name\n                 * @param {string} name - the name registered in the collection of controls\n                 * @private\n                 */\n                const getControl = name => this.controls[`\\$${name}`];\n\n                /**\n                 * Gets the value of an input field\n                 * @param {string} name - the name registered in the collection of controls\n                 * @returns {string}\n                 * @private\n                 */\n                function getInputValue(name) {\n                    const $control = getControl(name);\n                    return (($control && $control.val()) || '').trim();\n                }\n\n                /**\n                 * Sets the value of an input field\n                 * @param {string} name - the name registered in the collection of controls\n                 * @param {string} value\n                 * @private\n                 */\n                function setInputValue(name, value) {\n                    const $control = getControl(name);\n                    $control && $control.val(value);\n                }\n\n                /**\n                 * Enable/Disable a control\n                 * @param {string} name - the name registered in the collection of controls\n                 * @param {boolean} [state]\n                 * @private\n                 */\n                function toggleControl(name, state) {\n                    const $control = getControl(name);\n                    if ($control) {\n                        if (typeof state === 'undefined') {\n                            state = !$control.is(':enabled');\n                        }\n                        if (state) {\n                            $control.prop('disabled', false);\n                        } else {\n                            $control.prop('disabled', true);\n                        }\n                    }\n                }\n\n                /**\n                 * Requests the server to get the school name\n                 * @param {object} values\n                 * @private\n                 */\n                const requestSchoolName = values => {\n                    const componentConfig = this.config;\n                    return requestData(\n                        urlHelper.route(\n                            componentConfig.actionSchool,\n                            componentConfig.controller,\n                            componentConfig.extension\n                        ),\n                        values,\n                        'POST'\n                    ).then(data => {\n                        return {\n                            school_name: data,\n                            school_number: values.school_number\n                        };\n                    });\n                };\n\n                /**\n                 * Install the school name manager.\n                 * @todo: improve this by moving it into a plugin, and obviously implement the plugin handling\n                 * @private\n                 */\n                const manageSchoolProperties = (fields, validate) => {\n                    /**\n                     * Checks if the start button can be enabled\n                     * @returns {boolean}\n                     * @private\n                     */\n                    function toggleStart() {\n                        const allow = _.every(fields, getInputValue);\n                        toggleControl('start', allow);\n                        return allow;\n                    }\n\n                    /**\n                     * Enables/Disables the fields\n                     * @param {boolean} state\n                     * @private\n                     */\n                    function toggleFields(state) {\n                        _.forEach(fields, function(fieldName) {\n                            toggleControl(fieldName, state);\n                        });\n                    }\n\n                    // ensure the diagnostic cannot start without all fields properly input\n                    _.forEach(fields, fieldName => {\n                        this.controls[`\\$${fieldName}`] = this.getElement()\n                            .find(`[data-control=\"${fieldName}\"]`)\n                            .on('keypress', e => {\n                                const shouldStart = e.which === 13;\n                                if (shouldStart) {\n                                    e.preventDefault();\n                                }\n                                _.defer(() => {\n                                    if (toggleStart() && shouldStart) {\n                                        this.controls.$start.click();\n                                    }\n                                });\n                            });\n                    });\n\n                    toggleStart();\n\n                    // will store the school name in the browser storage, that will allow to restore it next time\n                    toggleFields(false);\n                    store('client-diagnostic')\n                        .then(storage => {\n                            // store the school name on test start, to ensure consistency\n                            this.on('start.school', () => {\n                                _.forEach(fields, fieldName => {\n                                    storage.setItem(fieldName, getInputValue(fieldName)).catch(error => {\n                                        logger.error(error);\n                                    });\n                                });\n                            });\n\n                            // restore the school name on load\n                            return Promise.all(\n                                _.map(fields, fieldName => {\n                                    return storage.getItem(fieldName).then(value => {\n                                        setInputValue(fieldName, value);\n                                    });\n                                })\n                            );\n                        })\n                        .catch(error => {\n                            logger.error(error);\n                        })\n                        .then(() => {\n                            toggleFields(true);\n                            toggleStart();\n                        });\n\n                    // ensure the fields are validated and the school name is properly sent before allowing to launch the test\n                    launch = () => {\n                        const values = _.reduce(\n                            fields,\n                            (result, fieldName) => {\n                                result[fieldName] = getInputValue(fieldName);\n                                return result;\n                            },\n                            {}\n                        );\n\n                        this.changeStatus(__('Getting school name...'))\n                            .cleanUp()\n                            .disable();\n\n                        if (_.isFunction(validate)) {\n                            validate(values)\n                                .then(runDiagnostics)\n                                .catch(error => {\n                                    const response = error.response || {};\n                                    const message =\n                                        response.errorMsg ||\n                                        response.errorMessage ||\n                                        __('An error occurred! Please verify your input!');\n                                    dialogAlert(message);\n                                    logger.error(error);\n                                    this.changeStatus(__('Failed to get school name')).enable();\n                                });\n                        } else {\n                            runDiagnostics(values);\n                        }\n                    };\n\n                    // ensure the fields are not writable while the test is running\n                    this.on('start.school', () => {\n                        toggleFields(false);\n                    }).on('end.school', () => {\n                        toggleFields(true);\n                    });\n                };\n\n                // get access to all needed placeholders\n                this.controls = {\n                    $start: this.$component.find('[data-action=\"test-launcher\"]'),\n                    $status: this.$component.find('.status h2'),\n                    $results: this.$component.find('.results')\n                };\n\n                // start the diagnostic\n                this.controls.$start.on('click', () => {\n                    this.controls.$start.is(':enabled') && launch();\n                });\n\n                if (this.config.requireSchoolName) {\n                    if (this.config.validateSchoolName) {\n                        manageSchoolProperties(['school_number', 'school_pin'], requestSchoolName);\n                    } else {\n                        manageSchoolProperties(['school_name']);\n                    }\n                }\n\n                if (this.config.requireSchoolId) {\n                    manageSchoolProperties(['school_id', 'workstation']);\n                }\n\n                // show result details\n                this.controls.$results.on('click', 'button[data-action=\"show-details\"]', function onShowDetails() {\n                    const $btn = $(this).closest('button');\n                    const $result = $btn.closest('[data-result]');\n                    const $details = $result.find('.details');\n                    $details.removeClass('hidden');\n                    $btn.addClass('hidden');\n                    $result.find('[data-action=\"hide-details\"]').removeClass('hidden');\n                });\n\n                // hide result details\n                this.controls.$results.on('click', 'button[data-action=\"hide-details\"]', function onHideDetails() {\n                    const $btn = $(this).closest('button');\n                    const $result = $btn.closest('[data-result]');\n                    const $details = $result.find('.details');\n                    $details.addClass('hidden');\n                    $btn.addClass('hidden');\n                    $result.find('[data-action=\"show-details\"]').removeClass('hidden');\n                });\n            });\n\n        _.defer(() => diagComponent.init(config));\n\n        return diagComponent;\n    };\n});\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.diagnostics-content-area{max-width:768px;margin:40px auto 40px auto}.diagnostics-main-area{margin:40px auto 0 auto;background:#f3f1ef;border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px;padding:20px}.diagnostics-main-area h1,.diagnostics-main-area h2,.diagnostics-main-area h3{font-style:normal;font-family:\\\"Source Sans Pro\\\",sans-serif}.diagnostics-main-area h1{margin-bottom:20px;font-size:20px;font-size:2rem}.diagnostics-main-area h2{margin:0;font-size:14px;font-size:1.4rem}.diagnostics-main-area h3{margin-top:10px;margin-bottom:5px;font-size:12px;font-size:1.2rem}.diagnostics-main-area .status h2,.diagnostics-main-area .details h2{margin:1rem 0}.diagnostics-main-area .legend{font-style:italic;font-weight:normal;font-family:\\\"Source Sans Pro\\\",sans-serif;font-size:11px;font-size:1.1rem}.diagnostics-main-area .customMsg{margin-top:10px}.diagnostics-main-area .quality-bar{height:15px;background:linear-gradient(to right, #CE1431 0%, #D57915 25%, #D5A215 50%, #D5CB15 75%, #36B111 100%);opacity:.8;-moz-border-radius:2px;-webkit-border-radius:2px;border-radius:2px;margin:5px 0 10px;position:relative}.diagnostics-main-area .quality-indicator{position:absolute;border-width:10px 8px;border-style:solid;border-color:#333 rgba(0,0,0,0) rgba(0,0,0,0);top:-1px;height:25px;width:0}.diagnostics-main-area .quality-indicator[title]:before{font-size:11px;font-size:1.1rem;content:attr(title);position:absolute;top:-36px;left:-12px;text-align:center;width:24px;height:24px;line-height:24px;display:inline-block;background-color:#0e5d91;color:rgba(255,255,255,.9);-moz-border-radius:12px;-webkit-border-radius:12px;border-radius:12px}.diagnostics-main-area .quality-indicator.wide[title]:before{left:-16px;width:32px}.diagnostics-main-area [data-result],.diagnostics-main-area .bandwidth-box{display:none}.diagnostics-main-area [data-action=bandwidth-launcher]{margin:5px 0 10px}.diagnostics-main-area li{padding-bottom:10px}.diagnostics-main-area .intro{margin-bottom:20px}.diagnostics-main-area .intro label{display:inline-block;width:150px}table.datatable [class^=icon-]{padding:0}table.datatable td{font-size:90%;font-weight:normal}table.datatable .progress .state:not(:first-child):before{content:\\\" - \\\"}table.datatable .progress .item-time:before{content:\\\" (\\\"}table.datatable .progress .item-time .total:before{content:\\\" / \\\"}table.datatable .progress .item-time:after{content:\\\")\\\"}.details table.matrix{border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px;margin-top:5px}.details table.matrix td:first-child{min-width:30%}.diagnostic-scope h1{font-family:\\\"Source Sans Pro\\\",sans-serif;font-size:22px;font-size:2.2rem;font-weight:normal}.diagnostic-scope h2{font-family:\\\"Source Sans Pro\\\",sans-serif;font-size:18px;font-size:1.8rem;margin:30px 0 10px}.diagnostic-scope form.daterange label{padding:0}.diagnostic-scope form.daterange input{margin:0 10px}.diagnostic-scope table.datatable [class^=icon-]{padding:0}.diagnostic-scope table.datatable td{font-size:90%;font-weight:normal}.diagnostic-scope .content{margin:auto}.diagnostic-scope .diagnostic-index .content,.diagnostic-scope .diagnostic-runner .content{width:100%}.diagnostic-scope .diagnostic-index .message,.diagnostic-scope .diagnostic-runner .message{padding:8px;text-align:center}.diagnostic-scope .panel .action-bar{background:#266d9c;padding:3px;overflow:hidden;color:#e7eff4}.diagnostic-scope .panel .action-bar .btn-info{overflow:hidden;background:rgba(0,0,0,0);border:1px rgba(255,255,255,.3) solid}.diagnostic-scope .diagnostics-main-area{margin-top:0px;max-width:800px}.diagnostic-scope .detailed-value{display:flex;justify-content:space-between}.diagnostic-scope .detailed-value.errors{color:#d8ae5b}.diagnostic-scope .detailed-value .details{font-size:2rem;cursor:pointer;color:#3e7da7}.diagnostic-scope .detailed-value .details:hover{color:#03131d}.action-bar .tool-exitButton,.action-bar [data-control=exitButton]{float:right}\\n\\n/*# sourceMappingURL=../../../taoClientDiagnostic/views/css/diagnostics.css.map */');\n","\ndefine(\"taoClientDiagnostic/loader/diagnostic.bundle\", function(){});\n","window.bundles = (window.bundles || []).concat([\"taoQtiItem/loader/taoQtiItem.min\",\"taoItems/loader/taoItems.min\"]);\n"],"mappings":"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"}